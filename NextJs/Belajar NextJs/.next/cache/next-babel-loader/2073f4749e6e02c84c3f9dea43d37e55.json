{"ast":null,"code":"function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\n * Berfungsi untuk menampilkan data covid19 secara global\n * maupun indonesia\n */\nexport var sum = function sum(key, props) {\n  if (props.isGlobal == false) {\n    switch (key) {\n      case 'Confirmed':\n        return props.data[0].positif;\n\n      case 'Recovered':\n        return props.data[0].sembuh;\n\n      case 'Deaths':\n        return props.data[0].meninggal;\n\n      case 'Active':\n        return props.data[0].dirawat;\n\n      default:\n        return 0;\n    }\n  } else {\n    switch (key) {\n      case 'Confirmed':\n        return props.data.reduce(function (sum, a) {\n          return sum + a.attributes.Confirmed;\n        }, 0);\n\n      case 'Recovered':\n        return props.data.reduce(function (sum, a) {\n          return sum + a.attributes.Recovered;\n        }, 0);\n\n      case 'Deaths':\n        return props.data.reduce(function (sum, a) {\n          return sum + a.attributes.Deaths;\n        }, 0);\n\n      case 'Active':\n        return props.data.reduce(function (sum, a) {\n          return sum + a.attributes.Active;\n        }, 0);\n\n      default:\n        return 0;\n    }\n  }\n};\nexport var getAllMonth = function getAllMonth(props) {\n  var monthEng = ['Jan', 'Feb', 'Mar', 'Apr', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Des'];\n  var nowDate = new Date();\n  var dat = null;\n  var year = null;\n  var label = [];\n  var positif = [];\n  var meninggal = [];\n  var data = [];\n\n  var _iterator = _createForOfIteratorHelper(props.statistik),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var value = _step.value;\n      nowDate = new Date(value.Date);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n};","map":{"version":3,"sources":["/Users/muhamadfikri/Developer/Learning/NextJs/Belajar NextJs/util/library.js"],"names":["sum","key","props","isGlobal","data","positif","sembuh","meninggal","dirawat","reduce","a","attributes","Confirmed","Recovered","Deaths","Active","getAllMonth","monthEng","nowDate","Date","dat","year","label","statistik","value"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA,OAAO,IAAMA,GAAG,GAAG,SAANA,GAAM,CAAUC,GAAV,EAAcC,KAAd,EAAoB;AACnC,MAAIA,KAAK,CAACC,QAAN,IAAkB,KAAtB,EAA6B;AACzB,YAAQF,GAAR;AACI,WAAK,WAAL;AACI,eAAOC,KAAK,CAACE,IAAN,CAAW,CAAX,EAAcC,OAArB;;AACJ,WAAK,WAAL;AACI,eAAOH,KAAK,CAACE,IAAN,CAAW,CAAX,EAAcE,MAArB;;AACJ,WAAK,QAAL;AACI,eAAOJ,KAAK,CAACE,IAAN,CAAW,CAAX,EAAcG,SAArB;;AACJ,WAAK,QAAL;AACI,eAAOL,KAAK,CAACE,IAAN,CAAW,CAAX,EAAcI,OAArB;;AACJ;AACI,eAAO,CAAP;AAVR;AAYH,GAbD,MAaK;AACD,YAAQP,GAAR;AACI,WAAK,WAAL;AACI,eAAOC,KAAK,CAACE,IAAN,CAAWK,MAAX,CAAkB,UAACT,GAAD,EAAKU,CAAL,EAAS;AAC9B,iBAAOV,GAAG,GAAGU,CAAC,CAACC,UAAF,CAAaC,SAA1B;AACH,SAFM,EAEL,CAFK,CAAP;;AAGJ,WAAK,WAAL;AACI,eAAOV,KAAK,CAACE,IAAN,CAAWK,MAAX,CAAkB,UAACT,GAAD,EAAKU,CAAL,EAAS;AAC9B,iBAAOV,GAAG,GAAGU,CAAC,CAACC,UAAF,CAAaE,SAA1B;AACH,SAFM,EAEL,CAFK,CAAP;;AAGJ,WAAK,QAAL;AACI,eAAOX,KAAK,CAACE,IAAN,CAAWK,MAAX,CAAkB,UAACT,GAAD,EAAKU,CAAL,EAAS;AAC9B,iBAAOV,GAAG,GAAGU,CAAC,CAACC,UAAF,CAAaG,MAA1B;AACH,SAFM,EAEL,CAFK,CAAP;;AAGJ,WAAK,QAAL;AACI,eAAOZ,KAAK,CAACE,IAAN,CAAWK,MAAX,CAAkB,UAACT,GAAD,EAAKU,CAAL,EAAS;AAC9B,iBAAOV,GAAG,GAAGU,CAAC,CAACC,UAAF,CAAaI,MAA1B;AACH,SAFM,EAEL,CAFK,CAAP;;AAGJ;AACI,eAAO,CAAP;AAlBR;AAoBH;AACJ,CApCM;AAsCN,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAASd,KAAT,EAAe;AACtC,MAAMe,QAAQ,GAAG,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,EAAmB,KAAnB,EAAyB,KAAzB,EAA+B,KAA/B,EAAqC,KAArC,EAA2C,KAA3C,EAAiD,KAAjD,EAAuD,KAAvD,EAA6D,KAA7D,CAAjB;AACA,MAAIC,OAAO,GAAG,IAAIC,IAAJ,EAAd;AACA,MAAIC,GAAG,GAAG,IAAV;AACA,MAAIC,IAAI,GAAG,IAAX;AACA,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIjB,OAAO,GAAG,EAAd;AACA,MAAIE,SAAS,GAAG,EAAhB;AACA,MAAIH,IAAI,GAAG,EAAX;;AARsC,6CASpBF,KAAK,CAACqB,SATc;AAAA;;AAAA;AAStC,wDAAmC;AAAA,UAA1BC,KAA0B;AAC/BN,MAAAA,OAAO,GAAG,IAAIC,IAAJ,CAASK,KAAK,CAACL,IAAf,CAAV;AAEH;AAZqC;AAAA;AAAA;AAAA;AAAA;AAazC,CAbM","sourcesContent":["/**\n * Berfungsi untuk menampilkan data covid19 secara global\n * maupun indonesia\n */\nexport const sum = function (key,props){\n    if (props.isGlobal == false) {\n        switch (key) {\n            case 'Confirmed':\n                return props.data[0].positif;\n            case 'Recovered':\n                return props.data[0].sembuh;\n            case 'Deaths':\n                return props.data[0].meninggal;\n            case 'Active':\n                return props.data[0].dirawat;\n            default:\n                return 0;\n        }\n    }else{\n        switch (key) {\n            case 'Confirmed':\n                return props.data.reduce((sum,a)=>{\n                    return sum + a.attributes.Confirmed;\n                },0 )\n            case 'Recovered':\n                return props.data.reduce((sum,a)=>{\n                    return sum + a.attributes.Recovered;\n                },0 )\n            case 'Deaths':\n                return props.data.reduce((sum,a)=>{\n                    return sum + a.attributes.Deaths;\n                },0 )\n            case 'Active':\n                return props.data.reduce((sum,a)=>{\n                    return sum + a.attributes.Active;\n                },0 )\n            default:\n                return 0;\n        }\n    }\n}\n\n export const getAllMonth = function(props){\n     const monthEng = ['Jan','Feb','Mar','Apr','Jun','Jul','Aug','Sep','Oct','Nov','Des']\n     let nowDate = new Date();\n     let dat = null;\n     let year = null;\n     let label = [];\n     let positif = [];\n     let meninggal = [];\n     let data = [];\n     for (let value of props.statistik) {\n         nowDate = new Date(value.Date)\n         \n     } \n }"]},"metadata":{},"sourceType":"module"}